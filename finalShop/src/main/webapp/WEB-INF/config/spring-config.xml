<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/data/mongo http://www.springframework.org/schema/data/mongo/spring-mongo-1.5.xsd">
		

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<context:component-scan base-package="kr.kitri.finalshop" />
	<context:component-scan base-package="product" />
	<context:component-scan base-package="member" />
	<context:component-scan base-package="board" />
	<context:component-scan base-package="admin" />


	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/" />
		<beans:property name="suffix" value=".jsp" />
		<beans:property name="order" value="2" />
	</beans:bean>
	<!-- tiles 작업할 수 있도록 설정 -->
	<beans:bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<beans:property name="definitions">
			<beans:list>
				<beans:value>/WEB-INF/config/tiles-config.xml</beans:value>
			</beans:list>
		</beans:property>
	</beans:bean>

	<beans:bean id="tilesviewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="viewClass"
			value="org.springframework.web.servlet.view.tiles2.TilesView" />
		<beans:property name="order" value="1" />
	</beans:bean>

	<!-- JDNI -->
	<beans:bean id="con" class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName" value="java:comp/env/jdbc/myspring"/>
		<beans:property name="resourceRef" value="true"/>
	</beans:bean>

	<!-- MyBatis -->
	<beans:bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="con" />
		<beans:property name="configLocation"
			value="/WEB-INF/config/mybatis-config.xml" />
	</beans:bean>
	<beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg ref="sqlSessionFactory" />
	</beans:bean>
	
	<!-- mongoDB -->
	<context:component-scan base-package="product.compare" />
	<mongo:mongo host="52.78.11.106" port="27017"/>
	
	<beans:bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<beans:constructor-arg ref="mongo"/>
		<beans:constructor-arg name="databaseName" value="danawa"/>
	</beans:bean>
	<mongo:repositories base-package="product.compare.dto"/>

	<!-- 로그인 인터셉터 -->
	<interceptors>
		<interceptor>
			<mapping path="/board/write.do"/>
			<mapping path="/board/modify.do"/>
			<beans:bean class="etc.controller.LoginCheckInterceptor"/>
		</interceptor>
	</interceptors>
	
</beans:beans>
